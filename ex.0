#include <stdio.h>
#include <stdlib.h>
typedef struct Node {
    int value;
    struct Node* head;
} Node;

int push(Node **Head, int val) {
    Node *tmp = (Node*)malloc(sizeof(Node));
    if (tmp == NULL) {
        return 1;
    }
    tmp->value = val;
    tmp->head = (*Head);
    (*Head) = tmp;
    return 0;
}

int pop(Node **Head) {
    int iTmp = (*Head)->value;
    Node *NTmp = (*Head);
    (*Head) = (*Head)->head;
    free(NTmp);
    return iTmp;
}

void deleteList(Node **Head) {
    while ((*Head)->head != NULL) {
        pop(Head);
    }
}

void insert(Node **Head, unsigned n, int val) {
    if (n == 0) {
        push(Head, val);
    }
    else {
        int counter = 0;
        Node *tmp = *Head;
        Node *new = (Node*)malloc(sizeof(Node));
        if (tmp == NULL) {
            exit(1);
        }
        new->value = val;
        while (counter < n-1 && tmp) {
            tmp = tmp->head;
            counter++;
        }
        new->head = tmp->head;
        tmp->head = new;
    }
}

int delete(Node **Head, unsigned n) {


    if (n == 0) {
        return pop(Head);
    }
    else {
        int counter = 0, iTmp;
        Node *tmp = *Head;
        Node *tmpDel;
        if (tmp == NULL) {
            exit(1);
        }
        while (counter < n-1 && tmp) {
            tmp = tmp->head;
            counter++;
        }
        tmpDel = tmp->head;
        iTmp = tmp->head->value;
        tmp->head = tmp->head->head;
        free(tmpDel);
        return iTmp;
    }
}

int get(Node **Head, unsigned n) {
    Node *tmp = (*Head);
    unsigned i = 0;
    while (tmp->head != NULL && i < n) {
        tmp = tmp->head;
        i++;
    }
    return tmp->value;
}
//3, 5, 1, 2, 9, 7, 5
int len (Node **Head) {
	Node *tmp = (*Head);
	int l=0;
    if (tmp == NULL) {
        return 0;
    }
    while (tmp->head) {
        tmp =tmp->head;
        l=l+1;
    }
    return l;
}
Node * sort(Node **Head,int n){
	Node *tmp = (*Head);
	Node *h = (Node*)malloc(sizeof(Node));
	int q,w,j,a;
	 for(q=0;q<n;q++) {
	    w = 0;
	    for (j = 1; j < n; ++j)
	      if (get(&tmp,j-1) > get(&tmp,j)) {
	        a=get(&tmp,j-1);
	        insert(&tmp,j-1,0);
	        w = j;
	      }
	      else{
	    	  a=get(&tmp,j);
	    	  insert(&tmp,j,0);
	      }
	    h->value=a;
	  }
	return(h);
}
void print(Node *Head,int n){
	int j;
	for (j = 1; j < n; ++j)
		      print("%d",Head->value);
}
void main() {
    Node *pHead = (Node*)malloc(sizeof(Node));
    Node *q;
    pHead->value = 5;
    push(&pHead, 7);
    push(&pHead, 9);
    push(&pHead, 2);
    push(&pHead, 1);
    push(&pHead, 5);
    push(&pHead, 3);
    q=sort(&pHead,7);
    print(q,7);
    deleteList(&pHead);
}
